I"¶<p>This post is relevant for the oneâ€™s who write tests, all you other programmers, you should learn unit testing and read it.&lt;div&gt;<br />&lt;/div&gt;&lt;div&gt;One of the mostÂ useful tools in unit testing is a good mocking framework. (Iâ€™m currently using <a href="http://code.google.com/p/moq/">Moq</a>, and before that I used <a href="http://www.ayende.com/projects/rhino-mocks.aspx">rhino</a>)&lt;/div&gt;&lt;div&gt;Â Â &lt;/div&gt;&lt;div&gt;We all know that for mocking we need interfaces.&lt;/div&gt;&lt;div&gt;<br />&lt;/div&gt;&lt;div&gt;My tip is very simple, if you have a class Foo and you wanna mock it, first you should have Interface IFoo (this should beÂ obvious to most of you).&lt;/div&gt;&lt;div&gt;Implement on FooÂ IEquatable&lt;IFoo&gt;, so if you test a list of IFoo and you want to assert Contains() Â you wonâ€™t have any problems with the proxy of IFoo that mocking framework generates on the interface and no one will blame you for your awful class that throws cast exception in its equals method :).&lt;/div&gt;&lt;div&gt;<br />&lt;/div&gt;&lt;div&gt;Hope itâ€™ll save you time in future.&lt;/div&gt;&lt;div&gt;<br />&lt;/div&gt;&lt;div&gt;That it, KIS.&lt;/div&gt;</p>
:ET