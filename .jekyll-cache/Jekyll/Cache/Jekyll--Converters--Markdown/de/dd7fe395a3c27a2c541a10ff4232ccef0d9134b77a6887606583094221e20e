I"A<p>The  most irritating thing in writing tests is the data generation preparation process, sometimes you want to create an object with 20 fields that 10 of them are mandatory but you only care about the value of 1, and you don’t want to mock, cause you interact with other methods and object that fetch this model from db.<br /><br />To me it happens a lot so I found the FactoryGirl + Faker combination that made my life much more easy and now I can write tests in peace.<br /><br />To add them just put in Gemfile:<br /><br /> gem “factory_girl_rails”, “~&gt; 4.0”<br />  gem “faker”<br /><br />So lets take a complex sample to explain all there is to know.<br /><br />We have a User, the User belongs to a Company, User has many tasks.<br /><br />Company has many irritating mandatory fields<br /><br />Lets define the Company Factory:<br /><br />&lt;pre style="background-color: #2b2b2b; border: 0.01mm solid rgb(0, 0, 0); font-size: 12pt; line-height: 100%;"&gt;<span style="color: #6d9cbe;">FactoryGirl</span><span style="color: #e6e1dc;">.define </span><span style="color: #cc7833;">do<br /></span><span style="color: #e6e1dc;">    factory </span><span style="color: #6d9cbe;">:company</span><span style="color: #e6e1dc;"> </span><span style="color: #cc7833;">do<br /></span><span style="color: #e6e1dc;">      name {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Name</span><span style="color: #e6e1dc;">.name}<br />      trp {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.between(</span><span style="color: #a5c261;">0</span><span style="color: #e6e1dc;">,</span><span style="color: #a5c261;">10</span><span style="color: #e6e1dc;">)}<br />      grp {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.between(</span><span style="color: #a5c261;">0</span><span style="color: #e6e1dc;">,</span><span style="color: #a5c261;">5</span><span style="color: #e6e1dc;">)}<br />      budget {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.number(</span><span style="color: #a5c261;">4</span><span style="color: #e6e1dc;">)}<br />      cpm {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.between(</span><span style="color: #a5c261;">1</span><span style="color: #e6e1dc;">,</span><span style="color: #a5c261;">70</span><span style="color: #e6e1dc;">)}<br />      trp_price {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.between(</span><span style="color: #a5c261;">100</span><span style="color: #e6e1dc;">,</span><span style="color: #a5c261;">700</span><span style="color: #e6e1dc;">)}<br />      viewer {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.between(</span><span style="color: #a5c261;">0</span><span style="color: #e6e1dc;">,</span><span style="color: #a5c261;">100000</span><span style="color: #e6e1dc;">)}<br />      total_viewer {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.between(</span><span style="color: #a5c261;">0</span><span style="color: #e6e1dc;">,</span><span style="color: #a5c261;">200000</span><span style="color: #e6e1dc;">)}<br />      unique_viewer {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.between(</span><span style="color: #a5c261;">0</span><span style="color: #e6e1dc;">,</span><span style="color: #a5c261;">50000</span><span style="color: #e6e1dc;">)}<br />      spots {</span><span style="color: #6d9cbe;">Faker</span><span style="color: #e6e1dc;">::</span><span style="color: #6d9cbe;">Number</span><span style="color: #e6e1dc;">.between(</span><span style="color: #a5c261;">0</span><span style="color: #e6e1dc;">,</span><span style="color: #a5c261;">1000</span><span style="color: #e6e1dc;">)}<br />    </span><span style="color: #cc7833;">end<br /></span><span style="color: #e6e1dc;">  </span><span style="color: #cc7833;">end</span>&lt;/pre&gt;<br />As you can see I define lots of fields with random values.<br /><br />Now we can create a company by writing<br />&lt;blockquote class="tr_bq"&gt;create(:company)&lt;/blockquote&gt;Or just build one (without save to db) by calling<br /><br />&lt;blockquote class="tr_bq"&gt;build(:company) &lt;/blockquote&gt;<br />That’s all for now, I’ll continue in part2.<br />&lt;blockquote class="tr_bq"&gt; &lt;/blockquote&gt;&lt;blockquote class="tr_bq"&gt; &lt;/blockquote&gt;</p>
:ET